@page "/clinics"
@inject HttpClient Http
@inject IClinicManagementApiService ApiService
@inject ILogger<Index> Logger

<PageTitle>Clinic Management - Clinics</PageTitle>

<div class="pagetitle">
    <h1>Clinics</h1>
    <nav>
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="/">Home</a></li>
            <li class="breadcrumb-item active">Clinics</li>
        </ol>
    </nav>
</div>

<section class="section">
    <div class="row">
        <div class="col">
        </div>
        <div class="col-1">
            <div class="btn-group mb-3" role="toolbar" aria-label="Toolbar with button groups">
                <a href="clinics/create" role="button" class="btn btn-success" title="New"><i class="bi bi-plus-lg"></i> New</a>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="card">
            <div class="card-body">
                <h5 class="card-title">List of clinics</h5>
                @if (apiResponse is null)
                {
                    <SpinnerComponent MessageLoading="Loading clinics..." MessageNotFound="There are no clinics available at the moment" ShowSpinner="showSpinner" />
                }
                else
                {
                    <table class="table datatable table-striped">
                        <thead>
                            <tr>
                                <th scope="col">#</th>
                                <th scope="col">Name</th>
                                <th scope="col" class="col-1">Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var (clinic, index) in apiResponse.Items.Select((clinic, index) => (clinic, index + 1)))
                            {
                                <tr>
                                    <td scope="row">@index</td>
                                    <td>@clinic.Name (@("branch".ToQuantity(clinic.BranchCount)))</td>
                                    <td>
                                        <a href="/clinics/edit/@clinic.VanityId" role="button" class="btn btn-secondary btn-sm" title="Edit"><i class="bi bi-pencil"></i></a>
                                        <button type="button" class="btn btn-danger btn-sm" @onclick="() => ShowDeleteModal(clinic)">
                                            <i class="bi bi-trash"></i>
                                        </button>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                }
            </div>
        </div>
    </div>
</section>

<ModalComponent @ref="modalComponent" PrimaryButtonText="Yes" SecondaryButtonText="No" EventCallback="HandleEventCallbackAsync" />